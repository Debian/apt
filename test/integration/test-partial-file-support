#!/bin/sh
set -e

TESTDIR=$(readlink -f $(dirname $0))
. $TESTDIR/framework
setupenvironment
configarchitecture 'amd64'

changetowebserver

copysource() {
	dd if="$1" bs=1 count="$2" of="$3" 2>/dev/null
	touch -d "$(stat --format '%y' "${TESTFILE}")" "$3"
}

DOWNLOADLOG='rootdir/tmp/testdownloadfile.log'

testdownloadfile() {
	rm -f "$DOWNLOADLOG"
	msgtest "Testing download of file $2 with" "$1 $5"
	if ! downloadfile "$2" "$3" "$5" > "$DOWNLOADLOG"; then
		cat >&2 "$DOWNLOADLOG"
		msgfail
	else
		msgpass
	fi
	sed -e '/^ <- / s#%20# #g' -e '/^ <- / s#%0a#\n#g' "$DOWNLOADLOG" | grep '^.*-Hash: ' > receivedhashes.log
	testsuccess test -s receivedhashes.log
	local HASHES_OK=0
	local HASHES_BAD=0
	while read field hash; do
		local EXPECTED
		case "$field" in
		'MD5Sum-Hash:') EXPECTED="$(md5sum "$TESTFILE" | cut -d' ' -f 1)";;
		'SHA1-Hash:') EXPECTED="$(sha1sum "$TESTFILE" | cut -d' ' -f 1)";;
		'SHA256-Hash:') EXPECTED="$(sha256sum "$TESTFILE" | cut -d' ' -f 1)";;
		'SHA512-Hash:') EXPECTED="$(sha512sum "$TESTFILE" | cut -d' ' -f 1)";;
		'Checksum-FileSize-Hash:')
			#filesize is too weak to check for !=
			if [ "$4" = '=' ]; then
				EXPECTED="$(stat -c '%s' "$TESTFILE")"
			else
				continue
			fi
			;;
		*) continue;;
		esac
		if [ "$4" = '=' ]; then
			msgtest 'Test downloaded file for correct' "$field"
		else
			msgtest 'Test downloaded file does not match in' "$field"
		fi
		if [ "$EXPECTED" "$4" "$hash" ]; then
			msgpass
			HASHES_OK=$((HASHES_OK+1));
		else
			msgfail "expected: $EXPECTED ; got: $hash"
			HASHES_BAD=$((HASHES_BAD+1));
		fi
	done < receivedhashes.log
	msgtest 'At least one good hash and no bad ones'
	if [ $HASHES_OK -eq 0 ] || [ $HASHES_BAD -ne 0 ]; then
		cat >&2 "$DOWNLOADLOG"
		msgfail
	else
		msgpass
	fi
}

TESTFILE='aptarchive/testfile'
cp -a ${TESTDIR}/framework $TESTFILE
cp -a ${TESTDIR}/framework "${TESTFILE}2"

followuprequest() {
	local DOWN='./downloaded/testfile'

	copysource $TESTFILE 1M $DOWN
	testdownloadfile 'completely downloaded file' "${1}/testfile" "$DOWN" '='
	testwebserverlaststatuscode '416' "$DOWNLOADLOG"

	webserverconfig 'aptwebserver::support::content-range' 'false'
	copysource $TESTFILE 1M $DOWN
	testdownloadfile 'completely downloaded file' "${1}/testfile" "$DOWN" '=' "SHA1:$(sha1sum "$TESTFILE" | cut -d' ' -f 1)"
	testwebserverlaststatuscode '416' "$DOWNLOADLOG"
	webserverconfig 'aptwebserver::support::content-range' 'true'

	copysource $TESTFILE 1M $DOWN
	copysource "${TESTFILE}2" 20 "${DOWN}2"
	msgtest 'Testing download of files with' 'completely downloaded file + partial file'
	testsuccess --nomsg apthelper -o Debug::Acquire::${1%%:*}=1 -o Debug::pkgAcquire::Worker=1 \
		download-file "$1/testfile" "$DOWN" '' "$1/testfile2" "${DOWN}2"
	testwebserverlaststatuscode '206' 'rootdir/tmp/testsuccess.output'
	testsuccess diff -u "$TESTFILE" "${DOWN}"
	testsuccess diff -u "${DOWN}" "${DOWN}2"
}

testrun() {
	webserverconfig 'aptwebserver::support::range' 'true'
	local DOWN='./downloaded/testfile'

	copysource $TESTFILE 0 $DOWN
	testdownloadfile 'no data' "${1}/testfile" "$DOWN" '='
	testwebserverlaststatuscode '200' "$DOWNLOADLOG"

	copysource $TESTFILE 20 $DOWN
	testdownloadfile 'valid partial data' "${1}/testfile" "$DOWN" '='
	testwebserverlaststatuscode '206' "$DOWNLOADLOG"

	copysource /dev/zero 20 $DOWN
	testdownloadfile 'invalid partial data' "${1}/testfile" "$DOWN" '!='
	testwebserverlaststatuscode '206' "$DOWNLOADLOG"

	webserverconfig 'aptwebserver::closeOnError' 'false'
	followuprequest "$1"
	webserverconfig 'aptwebserver::closeOnError' 'true'
	followuprequest "$1"
	webserverconfig 'aptwebserver::closeOnError' 'false'

	copysource /dev/zero 1M $DOWN
	testdownloadfile 'too-big partial file' "${1}/testfile" "$DOWN" '='
	testwebserverlaststatuscode '200' "$DOWNLOADLOG"

	copysource /dev/zero 20 $DOWN
	touch $DOWN
	testdownloadfile 'old data' "${1}/testfile" "$DOWN" '='
	testwebserverlaststatuscode '200' "$DOWNLOADLOG"

	webserverconfig 'aptwebserver::support::range' 'false'

	copysource $TESTFILE 20 $DOWN
	testdownloadfile 'no server support' "${1}/testfile" "$DOWN" '='
	testwebserverlaststatuscode '200' "$DOWNLOADLOG"
}

serverconfigs() {
	msgmsg "${1%%:*}: Test with Content-Length"
	webserverconfig 'aptwebserver::chunked-transfer-encoding' 'false'
	testrun "$1"
	msgmsg "${1%%:*}: Test with Transfer-Encoding: chunked"
	webserverconfig 'aptwebserver::chunked-transfer-encoding' 'true'
	testrun "$1"
}

serverconfigs "http://localhost:${APTHTTPPORT}"

changetohttpswebserver

serverconfigs "https://localhost:${APTHTTPSPORT}"
